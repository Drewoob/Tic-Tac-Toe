{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    const cellsContents = document.querySelectorAll(\".cell-content\");\r\n    const cells = document.querySelectorAll(\".cell\");\r\n    const playerDisplay = document.getElementById(\"current-player\");\r\n    const restartButton = document.getElementById(\"restart-button\");\r\n    let currentPlayer = localStorage.getItem(\"localPlayer\") ?? \"X\";\r\n    let board: Array<string>;\r\n    if (JSON.parse(localStorage.getItem(\"board\")??\"null\") === null) {\r\n      board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    }\r\n    else {\r\n      board = JSON.parse(localStorage.getItem(\"board\")!);\r\n      for (let i = 0;i < 9;i++) {\r\n        if (board[i] === \"\") continue;\r\n        cellsContents[i].textContent = board[i];\r\n        cellsContents[i].classList.add(\"filled\");\r\n      }\r\n    }\r\n    playerDisplay!.innerHTML = `<b>Current player: </b>${currentPlayer}`;\r\n\r\n    function checkWinner() {\r\n      const winningCombinations = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n      ];\r\n      for (let combo of winningCombinations) {\r\n        let [a, b, c] = combo;\r\n        if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n          setTimeout(() => alert(`Player ${currentPlayer} wins!`), 100);\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    function checkDraw() {\r\n      return board.every(cell => cell !== \"\");\r\n    }\r\n\r\n    function handleClick(event: Event) {\r\n      if (!event.target) return ;\r\n      const index = +((event.target as HTMLElement).dataset.index ?? \"\");\r\n      if (!board[index]) {\r\n        board[index] = currentPlayer;\r\n        localStorage.setItem(\"board\",JSON.stringify(board))\r\n        cellsContents[index].textContent = currentPlayer;\r\n        cellsContents[index].classList.add(\"filled\");\r\n        if (checkWinner()) {\r\n          // #ts-ignore\r\n          cellsContents.forEach(cell => cell.removeEventListener(\"click\", handleClick));\r\n          cells.forEach(cell => cell.removeEventListener(\"mouseover\", handleHover));\r\n          cells.forEach(cell => cell.removeEventListener(\"mouseleave\", handleEndHover));\r\n          return;\r\n        }\r\n        if (checkDraw()) {\r\n          setTimeout(() => alert(\"It's a draw!\"), 100);\r\n          return;\r\n        }\r\n        currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n        localStorage.setItem(\"localPlayer\",currentPlayer)\r\n        playerDisplay!.innerHTML = `<b>Current player: </b>${currentPlayer}`;\r\n      }\r\n    }\r\n\r\n    function handleHover(event: Event) {\r\n      const index = +((event.target as HTMLElement).dataset.index ?? \"\");\r\n      if (!board[index]) {\r\n        cellsContents[index].textContent = currentPlayer;\r\n      }\r\n    }\r\n\r\n    function handleEndHover(event: Event) {\r\n      const index = +((event.target as HTMLElement).dataset.index ?? \"\");\r\n      if (cellsContents[index].textContent && !board[index]) {\r\n        cellsContents[index].textContent = \"\";\r\n      }\r\n    }\r\n\r\n    function restartGame() {\r\n      localStorage.clear();\r\n      board.fill(\"\");\r\n      cellsContents.forEach(cell => {\r\n        cell.textContent = \"\";\r\n        cell.addEventListener(\"click\", handleClick);\r\n        cell.classList.remove(\"filled\");\r\n      });\r\n\r\n      cells.forEach(cell => {\r\n        cell.addEventListener(\"mouseover\", handleHover);\r\n        cell.addEventListener(\"mouseleave\", handleEndHover);\r\n      });\r\n\r\n      currentPlayer = \"X\";\r\n      playerDisplay!.innerHTML = `<b>Current player: </b>${currentPlayer}`;\r\n    }\r\n\r\n    if(!checkWinner() && !checkDraw()) {\r\n      cells.forEach(cell => cell.addEventListener(\"mouseover\", handleHover));\r\n      cells.forEach(cell => cell.addEventListener(\"mouseleave\", handleEndHover));\r\n      cellsContents.forEach(cell => cell.addEventListener(\"click\", handleClick));\r\n    }\r\n    restartButton!.addEventListener(\"click\", restartGame);\r\n});"],
  "mappings": "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",
  "names": []
}
